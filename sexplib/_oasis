OASISFormat:  0.2
OCamlVersion: >= 3.12
Name:         sexplib
Version:      7.0.2
Synopsis:     automated S-expression conversion
Authors:      Markus Mottl,
              Martin Sandin
Copyrights:   (C) 2005-2011 Jane Street Capital LLC
License:      LGPL-2.1 with OCaml linking exception
LicenseFile:  LICENSE
Plugins:      StdFiles (0.2),
              DevFiles (0.2),
              META (0.2)
BuildTools:   ocamlbuild
XStdFilesAUTHORS: false
XStdFilesINSTALLFilename: INSTALL
XStdFilesREADME: false

Library sexplib
  Path:               lib
  FindlibName:        sexplib
  Pack:               true
  Modules:            Type,
                      Parser,
                      Lexer,
                      Pre_sexp,
                      Sexp_intf,
                      Sexp,
                      Path,
                      Conv,
                      Conv_error,
                      Exn_magic,
                      Std
  BuildDepends:       unix,bigarray,num
#  XMETAType:          library
  XMETARequires:      unix,bigarray,num

Library pa_sexp_conv
  Path:               syntax
  Modules:            Pa_sexp_conv
  FindlibParent:      sexplib
  FindlibName:        syntax
  BuildDepends:       camlp4.lib,
                      camlp4.quotations,
                      type-conv (>= 2.3.0)
  CompiledObject:     byte
  XMETAType:          syntax
  XMETARequires:      camlp4,type-conv,sexplib
  XMETADescription:   Syntax extension for Sexplib

#Library sexplib_top
#  Path:               top
#  FindlibParent:      sexplib
#  FindlibName:        top

Flag tests
  Description:        Build and run tests
  Default:            true

Executable sexp_test
  Path:               lib_test
  MainIs:             sexp_test.ml
  Build$:             flag(tests)
  Install:            false
  BuildDepends:       sexplib

Executable conv_test
  Path:               lib_test
  MainIs:             conv_test.ml
  Build$:             flag(tests)
  Install:            false
  BuildDepends:       sexplib, sexplib.syntax

Test sexp
  Run$:               flag(tests)
  Command:            $sexp_test < test.sexp
  WorkingDirectory:   lib_test

Test conv
  Run$:               flag(tests)
  Command:            $conv_test
  WorkingDirectory:   lib_test
